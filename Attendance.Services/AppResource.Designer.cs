//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Attendance.Services {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Attendance.Services.AppResource", typeof(AppResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO 
        ///	Vetting (VetId,ObjectId) 
        ///	(
        ///	SELECT 
        ///		@vetId  AS VetId
        ///		, vi.ObjectId 
        ///	FROM VIQ vi
        ///	LEFT JOIN Vetting vet ON vet.VETId = @vetId AND vet.ObjectId = vi.ObjectId
        ///	WHERE 
        ///        vet.VETId IS NULL
        ///        AND vi.Qid = @qId
        ///	).
        /// </summary>
        internal static string SQL_Copy_Questionnaires {
            get {
                return ResourceManager.GetString("SQL_Copy_Questionnaires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CREATE TABLE [Version]( [VersionCode] [nvarchar](1000) NOT NULL );
        ///CREATE TABLE [VisitLog]( [ValidFromDate] [datetime] ,[ValidToDate] [datetime] ,[LastDate] [datetime] ,[VisitNumberLimit] [int], [VettingNumberLimit] [int] ,[QuestionnaireLimit] [int] ,[VettingNumber] [int] ,[QuestionnaireNumber] [int] ,[VisitNumber] [int] ,[GuiFileId] [nvarchar](1024), [OriginalFileName] [nvarchar](1024) );
        ///CREATE TABLE [SMVetting]( [VETId] [int] NOT NULL, [ObjectId] [uniqueidentifier] NOT NULL, [answer] [nvarchar](5)  NUL [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SQL_Create_Export_DB {
            get {
                return ResourceManager.GetString("SQL_Create_Export_DB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert into Users (UserId, UserName) values(1, @p0).
        /// </summary>
        internal static string SQL_Create_Init_User {
            get {
                return ResourceManager.GetString("SQL_Create_Init_User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert into version (VersionCode) values(&apos;NullVersion 2009&apos;);.
        /// </summary>
        internal static string SQL_Create_Init_VersionCode {
            get {
                return ResourceManager.GetString("SQL_Create_Init_VersionCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert into VisitLog (ValidFromdate, ValidToDate, VisitNumber, VisitNumberLimit, VettingNumberLimit, OriginalFileName)values (@p0, @p1, @p2, @p3, 10, @p5).
        /// </summary>
        internal static string SQL_Create_Init_VisitLog {
            get {
                return ResourceManager.GetString("SQL_Create_Init_VisitLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	a.QId
        ///	,a.VesselName
        ///	,a.InspectorName
        ///	,a.CompanyRepresentativeName
        ///	,a.VettingCode
        ///	,a.VetGUI
        ///	,a.Port
        ///	,a.Vetdate
        ///	,a.comments
        ///	,b.VIQGUI
        ///	, (CASE  
        ///        	WHEN c.InspectionType IS NOT NULL THEN c.InspectionType
        ///        	ELSE &apos;&apos;
        ///    	END) AS InspectionType
        ///	,a.InspectionTypeId
        ///	,a.VesselId
        ///	,a.VetId	
        ///FROM 
        ///	VettingInfo  a 
        ///	LEFT JOIN VIQInfo b ON a.QId = b.QId 
        ///	LEFT JOIN INSPECTIONTYPES c ON a.InspectionTypeId = c.InspectionTypeId 
        ///WHERE vetid=@p0.
        /// </summary>
        internal static string SQL_GetVettingInfoByVetId {
            get {
                return ResourceManager.GetString("SQL_GetVettingInfoByVetId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT * FROM 
        ///VettingInfo AS vInfo 
        ///LEFT JOIN 
        ///	(
        ///		SELECT VETId, COUNT(*) as Answered 
        ///		FROM SMVetting 
        ///		WHERE 
        ///			answer IS NOT NULL 
        ///		GROUP BY VETId
        ///	) as asnNum ON vInfo.VetId=asnNum.VETId
        ///WHERE QId=@qid  
        ///ORDER BY vInfo.VetDate.
        /// </summary>
        internal static string SQL_GetVettingInfosByQid {
            get {
                return ResourceManager.GetString("SQL_GetVettingInfosByQid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [SMQuestionnaire] ( QId, ObjectId, ObjectType, CategoryId, ParentCategoryId, GlobalDisplayIndex, DisplayLevel, Children, ObjectDescription, ObjectComments,DisplayCode, DefaultCode,ParentId,InternalDisplayCode ) VALUES (@p_qid,@p_objid,@p_objtype,@p_catid,@p_parcatid,@p_glbidx,@p_dl,@p_children,@p_objdescr,@p_comm,@p_displcode,@p_defcode,@p_parentid,@p_intdisplaycode);.
        /// </summary>
        internal static string SQL_Insert_Questionnaire {
            get {
                return ResourceManager.GetString("SQL_Insert_Questionnaire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO VIQINFO (QID,Title,Author,Finalized,Registrationdate,comments,viqgui,NumOfQuestions) VALUES (@p_qid,@p_title,@p_author,@p_final,@p_regdate,@p_comment,@p_viqgui,@p_numofq);.
        /// </summary>
        internal static string SQL_Insert_VIQInfo {
            get {
                return ResourceManager.GetString("SQL_Insert_VIQInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select InternalDisplayCode,a.*,b.answer,b.significance,b.comments from (Select a1.InternalDisplayCode,a1.DisplayCode,a1.ParentId,a1.displaylevel,a1.qid,a1.globaldisplayindex, a1.ObjectId,a1.ObjectType,a1.children ,a2.CategoryDescription ObjectDescription,null ObjectComments,a2.categorycode as defaultcode from VIQ a1 join Category  as a2 on a1.objectid=a2.categorynewid  where a1.qid=@qid UNION ALL Select a1.InternalDisplayCode,a1.DisplayCode,a1.ParentId,a1.displaylevel,a1.qid,a1.globaldisplayindex, a1.Object [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SQL_Open_Attendance_Detail {
            get {
                return ResourceManager.GetString("SQL_Open_Attendance_Detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Vetting 
        ///SET 
        ///    answer=@answer
        ///    ,significance=@sig
        ///    ,comments=@cmt 
        ///WHERE  
        ///   ObjectId=@objId AND VetId=@vetId.
        /// </summary>
        internal static string SQL_Update_Questionnaires_By_ObjId {
            get {
                return ResourceManager.GetString("SQL_Update_Questionnaires_By_ObjId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE Vetting 
        ///SET 
        ///    answer=@answer
        ///    ,significance=@sig
        ///    ,comments=@cmt 
        ///WHERE  
        ///    VetId=@vetId.
        /// </summary>
        internal static string SQL_Update_Questionnaires_By_Vet {
            get {
                return ResourceManager.GetString("SQL_Update_Questionnaires_By_Vet", resourceCulture);
            }
        }
    }
}
